@startuml

class Cliente {
  +endereco : str
  +contas : List[Conta]
  +realizar_transacao(conta : Conta, transacao : Transacao) : void
  +adicionar_conta(conta : Conta) : void
}

class PessoaFisica {
  +nome : str
  +data_nascimento : str
  +cpf : str
  +__init__(nome : str, data_nascimento : str, cpf : str, endereco : str) : void
}

class Conta {
  -_saldo : float
  -_numero : str
  -_agencia : str
  -_cliente : Cliente
  -_historico : Historico
  +nova_conta(cliente : Cliente, numero : str) : Conta
  +saldo : float
  +numero : str
  +agencia : str
  +cliente : Cliente
  +historico : Historico
  +sacar(valor : float) : bool
  +depositar(valor : float) : bool
}

class ContaCorrente {
  +limite : float
  +limite_saques : int
  +__init__(numero : str, cliente : Cliente, limite : float = 500, limite_saques : int = 3) : void
  +sacar(valor : float) : bool
  +__str__() : str
}

class Historico {
  -_transacoes : List[Dict[str, str]]
  +transacoes : List[Dict[str, str]]
  +adicionar_transacao(transacao : Transacao) : void
}

class Transacao {
  <<abstract>>
  +valor : float
  +registrar(conta : Conta) : void
}

class Saque {
  +_valor : float
  +valor : float
  +registrar(conta : Conta) : void
}

class Deposito {
  +_valor : float
  +valor : float
  +registrar(conta : Conta) : void
}

Cliente <|-- PessoaFisica
Conta <|-- ContaCorrente
Transacao <|-- Saque
Transacao <|-- Deposito
Conta "1" --> "*" Historico
Conta "1" --> "1" Cliente
Historico "*" --> "*" Transacao

@enduml
